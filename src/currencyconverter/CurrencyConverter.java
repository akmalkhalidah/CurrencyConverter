package currencyconverter;

import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

public class CurrencyConverter extends javax.swing.JFrame {

   String currentPattern;
    private HashMap<String, Double> HashMap1;
    private ArrayList<String> List;

       private ArrayList<String> currencies  = new ArrayList<String>();;;
    private CurrencyConverter cc;
DecimalFormat df = new DecimalFormat("#####.00");

public CurrencyConverter() {
    initComponents();
    
    HashMap1= new HashMap<String, Double>();
List = new ArrayList<String>();
try{
 URL ecb = new URL("https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml");
BufferedReader in = new BufferedReader(new InputStreamReader(ecb.openStream()));
FileWriter fw = new FileWriter("Rates.xml");
String inputLine;


while ((inputLine = in.readLine()) != null){
System.out.println(inputLine);
fw.write(inputLine);

String buff = inputLine;
}

in.close();
fw.close();
}
catch(Exception e){
    e.printStackTrace();
System.exit(1);
}
    
    
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    jcmbCurrency1 = new javax.swing.JComboBox<>();
    jcmbCurrency2 = new javax.swing.JComboBox<>();
    jtxtAmount = new javax.swing.JTextField();
    jlblConversion = new javax.swing.JLabel();
    jbtnConvert = new javax.swing.JButton();
    jbtnReset = new javax.swing.JButton();
    jtxtConversion = new javax.swing.JTextField();
    jbtnExit = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel1.setText("Currency Converter");
    
    CurrencyBox1 = new javax.swing.JComboBox();
        CurrencyBox2 = new javax.swing.JComboBox();
 CurrencyBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "USD"}));
        CurrencyBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrencyBox1ActionPerformed(evt);
            }
        });

        CurrencyBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"USD" }));
        CurrencyBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrencyBox2ActionPerformed(evt);
            }
        });

    jtxtAmount.setText("Amount");

    jlblConversion.setText("Conversion");

    jbtnConvert.setText("CONVERT");
    jbtnConvert.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbtnConvertActionPerformed(evt);
        }

        private void jbtnConvertActionPerformed(ActionEvent evt) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    });

    jbtnReset.setText("RESET");
    jbtnReset.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbtnResetActionPerformed(evt);
        }
    });

    jtxtConversion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jtxtConversion.setForeground(new java.awt.Color(0, 0, 204));
    jtxtConversion.setText("Converted Value");

    jbtnExit.setText("Exit");
    jbtnExit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jbtnExitActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel1)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jbtnConvert)
                    .addGap(18, 18, 18)
                    .addComponent(jbtnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(jcmbCurrency1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jcmbCurrency2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtxtAmount)
                .addComponent(jlblConversion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtxtConversion))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(layout.createSequentialGroup()
            .addGap(158, 158, 158)
            .addComponent(jbtnExit)
            .addContainerGap(191, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(22, 22, 22)
            .addComponent(jLabel1)
            .addGap(28, 28, 28)
            .addComponent(jcmbCurrency1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jcmbCurrency2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jtxtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(38, 38, 38)
            .addComponent(jlblConversion)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jtxtConversion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtnConvert)
                .addComponent(jbtnReset))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jbtnExit)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
}// </editor-fold>                

private void CurrencyBox1ActionPerformed(java.awt.event.ActionEvent evt) {

      //  CurrencyText1 = new JFormattedTextField(NumberFormat.getInstance());
       //CurrencyConverter currconv = new CurrencyConverter();

     //   JComboBox cb = (JComboBox) evt.getSource();
        //String from = (String) cb.getSelectedItem();
          String from = (String) CurrencyBox2.getSelectedItem();
        String to =(String)  CurrencyBox1.getSelectedItem();
        //double amount = Double.parseDouble(this.CurrencyText1.getText());
          String s=  this.CurrencyText2.getText();
                 if(s.trim().length() == 0){

//pop up errort message - input is empty
                       return;

                          }
                 

  double amount = Double.parseDouble(s);

       double converted = convert(from, to, amount);

            CurrencyText1.setText(df.format(converted) + "");
            // double result = cc.convert(from, to, amount);
		//CurrencyBox1.setSelectedItem(new Double(result));


    }

    private void CurrencyBox2ActionPerformed(java.awt.event.ActionEvent evt) {
        // JComboBox cb = (JComboBox) evt.getSource();
       // CurrencyConverter currconv = new CurrencyConverter();
        //String from = (String) cb.getSelectedItem();
         String from = (String) CurrencyBox1.getSelectedItem();
        String to = (String) CurrencyBox2.getSelectedItem();
         String s=  CurrencyText1.getText();
               if(s.trim().length() == 0){

//pop up errort message - input is empty
                        return;

                         }



    double amt = Double.parseDouble(jtxtAmount.getText());

    int obj1 = jcmbCurrency1.getSelectedIndex();
    int obj2 = jcmbCurrency2.getSelectedIndex();

    if (obj1 == obj2){
        String samecur = "Both the currencies cannot be the same";
        jtxtConversion.setText(samecur);
    }
    else {
             double[] curr1 = null;
             double[] curr2 = null;
        double res = (amt/curr1[obj1])*curr2[obj2];

        String conv = String.format("%.2f",res);
        jtxtConversion.setText(conv);
    }

}                                           

private void jbtnResetActionPerformed(java.awt.event.ActionEvent evt) {                                          
    // TODO add your handling code here:
    jtxtAmount.setText(null);
    jtxtConversion.setText(null);
    jcmbCurrency1.setSelectedIndex(0);
    jcmbCurrency2.setSelectedIndex(0);
}                                         

private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {                                         
    // TODO add your handling code here:
    System.exit(0);
}                                        

public static void main(String args[]) throws ParserConfigurationException, SAXException, IOException {
    
        try {
            
          URL ecb = new URL("http://www.ecb.int/stats/eurofxref/eurofxref-daily.xml");
BufferedReader in = new BufferedReader(new InputStreamReader(ecb.openStream()));
FileWriter fw = new FileWriter("Rates.xml");
String inputLine;


while ((inputLine = in.readLine()) != null){
System.out.println(inputLine);
fw.write(inputLine);

String buff = inputLine;
}

       /*  System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
         NodeList nList = doc.getElementsByTagName("Cube");
         System.out.println("----------------------------");
         
         for (int temp = 0; temp < nList.getLength(); temp++) {
            Node nNode = nList.item(temp);
            System.out.println("\nCurrent Element :" + nNode.getNodeName());
            
            if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                
               Element eElement = (Element) nNode;
               System.out.print("Currency : ");
               System.out.println(eElement.getAttribute("currency"));
               
                System.out.print("Rate : ");
               System.out.println(eElement.getAttribute("rate"));
               
             
            }
         }
*/
      
        
     
        
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new CurrencyConverter().setVisible(true);
        }
    });
}

// Variables declaration - do not modify                     
private javax.swing.JLabel jLabel1;
private javax.swing.JButton jbtnConvert;
private javax.swing.JButton jbtnExit;
private javax.swing.JButton jbtnReset;
private javax.swing.JComboBox CurrencyBox1;
    private javax.swing.JComboBox CurrencyBox2;
        private javax.swing.JTextField CurrencyText1;
      private javax.swing.JTextField CurrencyText2;
private javax.swing.JComboBox<String> jcmbCurrency1;
private javax.swing.JComboBox<String> jcmbCurrency2;
private javax.swing.JLabel jlblConversion;
private javax.swing.JTextField jtxtAmount;
private javax.swing.JTextField jtxtConversion;
// End of variables declaration                   

    private double convert(String from, String to, double amount) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}